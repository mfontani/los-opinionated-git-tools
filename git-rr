#!/bin/bash

# Get current branch, without initial "heads/"
BRANCH=$(git rev-parse --abbrev-ref HEAD)

# Kill the "git log" paging features
PAGER=

# Which branch to start with, defaults to master
STARTBRANCH=${1:-master}

# Lines look like:
# * c0ffee00 commit message1
#   FILE00001 path/to/file1
# <-= newline
# * 00c0ffee commit message2
#   FILE00001 path/to/file1
#   FILE00002 path/to/file2
# <-= newline

echo "### navigate commits with /pick and 'n' or 'N'"
echo "### use 'd/pick' on a line below 'pick' to clear the files changed by a specific commit"
echo "### START Rebasing branch $BRANCH to $STARTBRANCH"
echo "###"
echo "#"
git log --reverse --pretty=format:'* %h   %s' --abbrev-commit --stat --name-only $STARTBRANCH.. | perl -lne'
    BEGIN {
      %seen = ();
      $file = 1;
    }
    s!\s*$!!;               # kill any trailing spaces
    if ( m!^\*! ) {
        s!^\*!pick    !     # by default, show "pick"
    } elsif (/^\s*$/) {     # skip whitespace-only lines
        next;
    } else {                # comment-out "file id", and file name
        $seen{$_} = $file++
            if !$seen{$_};
        $id = sprintf("FILE%05x", $seen{$_});
        s!^!#        $id !;
    }
    print
'
echo "#"
echo "###"
echo "### END Rebasing branch $BRANCH"
echo "###"
